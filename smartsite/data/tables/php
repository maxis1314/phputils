a	b
判断一个数是3的倍数但不是5的倍数	if($a%3==0 && $a%5!=0)
实现HTML escape的函数是那个	htmlspecialchars
实现Mysql escape的函数是那个	mysql_real_escape_string
MVC是指?	Model View Controller
你知道那些php的MVC	CakePHP Symfony
如何把一个字符串里面的a替换成b	preg_replace('/a/', 'b', $string); 或者 str_replace('a','b',$string);
如何循环一个hash	foreach($a as $key=>$value){}
如何循环一个数组	foreach($a as $value){} 
判断字符串长度	strlen($string)
输出HTTP图片头部	Header("Content-type: image/PNG");
如何把逗号分隔字符串变成数组	split(",", "a,b,c"); => array("a","b","c")[CRLF]explode(",", "a,b,c"); => array("a","b","c")	109/2/5/11-8-31
用逗号连接数组元素组成字符串	implode(",", array("a","b")); => "a,b"[CRLF]join(",", array("a","b")); => "a,b"	109/1/21/18-15-45
如何结束一个循环	break;
如何跳过一个元素继续循环	<span style="text-decoration: underline;">continue</span>	
截取一个字符串从第3位开始的2个字符	substr(3,2,$str)
写出sql 插入数据语句	INSERT INTO "表格名" ("栏位1", "栏位2", ...)[CRLF]VALUES ("值1", "值2", ...)[CRLF][CRLF]INSERT INTO Store_Information (store_name, Sales, Date)[CRLF]SELECT store_name, Sales, Date[CRLF]FROM Sales_Information[CRLF]WHERE Year(Date) = 1998	109/1/21/17-0-18
写出sql update语句	<span style="color: rgb(255, 0, 0);">UPDATE</span> Store_Information<br /><span style="color: rgb(255, 0, 0);">SET</span> Sales = 500<br /><span style="color: rgb(255, 0, 0);">WHERE </span>store_name = "Los Angeles"<br />AND Date = "Jan-08-1999"<br /><br />UPDATE "表格"<br />SET "栏位1" = [值1], "栏位2" = [值2]<br />WHERE {条件}	109/1/21/17-1-12
写出sql删除语句	<span style="font-weight: bold;">DELETE </span>FROM Store_Information<br /><span style="font-weight: bold;">WHERE </span>store_name = "Los Angeles"	
如何用sql选出不重复的字段	SELECT DISTINCT store_name FROM Store_Information
我们若要在 Store_Information表格中选出所有 Sales 高于 1,000 或是 Sales 在 500 及 275 	SELECT store_name[CRLF]FROM Store_Information[CRLF]WHERE Sales > 1000[CRLF]OR (Sales < 500 AND Sales > 275) 
如何求几个数的最大值和最小值	echo max(1, 3, 5, 6, 7);  // 7[CRLF]echo max(array(2, 4, 5)); // 5[CRLF]echo min(2, 3, 1, 6, 7);  // 1[CRLF]echo min(array(2, 4, 5)); // 2
如何把一个数组正排序和倒排序	$fruits = array("lemon", "orange", "banana", "apple");[CRLF]sort($fruits);正排序[CRLF]rsort($fruits);倒排序[CRLF]
如何对hash进行正倒排序	$fruits = array("d"=>"lemon", "a"=>"orange", "b"=>"banana", "c"=>"apple");[CRLF]ksort($fruits);[CRLF]krsort($fruits);
如何用自己定义的函数对数组排序	function cmp($a, $b)[CRLF]{[CRLF]$a = preg_replace('@^(a|an|the) @', '', $a);[CRLF]$b = preg_replace('@^(a|an|the) @', '', $b);[CRLF]return strcasecmp($a, $b);[CRLF]}[CRLF][CRLF]$a = array("John" => 1, "the Earth" => 2, "an apple" => 3, "a banana" => 4);[CRLF][CRLF]uksort($a, "cmp");	109/1/21/18-4-33
如何把一个文件读入一个数组	$lines = file('a.txt');
如何在文件末尾添加字符串	$handle = f open('a.txt', 'a');[CRLF]f write($handle,"aaaaa"); [CRLF]f close($handle);
如何覆盖原文件	$handle = f open('a.txt', 'w');[CRLF]f write($handle,"aaaaa");[CRLF]f close($handle);
如何删除文件和目录	unlink('test.html');[CRLF]unlink('testdir');	109/1/21/18-13-49
如何取5和15之间的随机数	echo rand(5, 15);
如何判断文件是否存在	$filename = '/path/to/foo.txt';<br /><br />if (<font style="color: rgb(204, 153, 51);" size="6">file_exists</font>($filename)) {<br />    echo "The file $filename exists";<br />} else {<br />    echo "The file $filename does not exist";<br />}	
如何把一种编码的字符串转成另一种编码	mb_convert_encoding($str,"UTF-8","UTF-8");
如何引用另一个php文件	<span style="background-color: rgb(153, 255, 153);">require_once</span>("/layout/wi.php");	
如何取得当前日期	[CRLF]$today = date("F j, Y, g:i a");                 // March 10, 2001, 5:16 pm[CRLF]$today = date("m.d.y");                         // 03.10.01[CRLF]$today = date("j, n, Y");                       // 10, 3, 2001[CRLF]$today = date("Ymd");                           // 20010310[CRLF]$today = date('h-i-s, j-m-y, it is w Day');     // 05-16-16, 10-03-01, 1631 1616 6 Fripm01[CRLF]$today = date('\i\t \i\s \t\h\e jS \d\a\y.');   // It is the 10th day.[CRLF]$today = date("D M j G:i:s T Y");               // Sat Mar 10 17:16:18 MST 2001[CRLF]$today = date('H:m:s \m \i\s\ \m\o\n\t\h');     // 17:16:18 m is month[CRLF]$today = date("H:i:s");                         // 17:16:18
如何打印变量	var_dump[CRLF]print_r
如何取得名为info的cookie值	$_COOKIE["info"];
如何取得当前访问的URL	$_SERVER['REQUEST_URI']
如何判断一个数组元素个数	$a[0] = 1;[CRLF]$a[1] = 3;[CRLF]$a[2] = 5;[CRLF]$result = count($a);[CRLF]// $result == 3
如何判断一个变量是不是数组	$yes = array('this', 'is', 'an array');[CRLF][CRLF]echo is_array($yes) ? 'Array' : 'not an Array';[CRLF]echo "\n";[CRLF][CRLF]$no = 'this is a string';[CRLF][CRLF]echo is_array($no) ? 'Array' : 'not an Array';
如何连接mysql数据库并执行sql	$link=mysql_connect($dsn["dbHost"],$dsn["dbUser"],$dsn["dbPswd"]);[CRLF]mysql_select_db($dsn["dbName"],$link);[CRLF]mysql_query("insert into mvc_blog(user_id,title,content,cata) values(\"$u_id\",\"$title\",\"$content\",\"$cata\")",$link);[CRLF] 
如何定义宏	define("BABA", "dddddddd");[CRLF]echo BABA;
如何判断一个元素是不是在数组里面	$os = array("Mac", "NT", "Irix", "Linux");[CRLF]if (in_array("Irix", $os)) {[CRLF]    echo "Got Irix";[CRLF]}[CRLF]if (in_array("mac", $os)) {[CRLF]    echo "Got mac";[CRLF]}
如何给数组添加元素	$stack = array("orange", "banana");[CRLF]array_push($stack, "apple", "raspberry");[CRLF]$stack[]="dddd";
如何取得名为info的POST数据	$_POST["info"];
$str="cd";$$str="hotdog";$$str.="ok";echo $cd;  	hotdogok
如何取得名为info的GET数据	$_GET["info"]
如何写出一个cookie	$value = 'something from somewhere';[CRLF][CRLF]setcookie("TestCookie", $value);[CRLF]setcookie("TestCookie", $value, time()+3600);  /* expire in 1 hour */[CRLF]setcookie("TestCookie", $value, time()+3600, "/~rasmus/", ".example.com", 1);
如何取得session中key为info的值	$_SESSION["info"]
如何new一个动态对象	$obj="Teacher"[CRLF]$teacher=new $obj();
如何在3秒后跳转到google	<pre id="line78">echo "&lt;<span class="start-tag">meta</span><span class="attribute-name"> http-equiv</span>=<span class="attribute-value">\"Content-Type\" </span><span class="attribute-name">content</span>=<span class="attribute-value">\"text/html; </span><span class="attribute-name">charset</span>=<span class="attribute-value">UTF-8\"</span>&gt;";<span class="start-tag"></span><span class="error"><span class="attribute-name"></span></span><br />echo "&lt;<span class="start-tag">META</span><span class="attribute-name"> HTTP-EQUIV</span>=<span class="attribute-value">\"Refresh\" </span><span class="attribute-name">CONTENT</span>=<span class="attribute-value">\"3; </span><span class="attribute-name">URL</span>=<span class="attribute-value">http://google.com\"</span>&gt;";<br /><span class="start-tag"></span><br /></pre>	
如何立刻跳转到google	header('Location: http://google.com');
你知道那些常用的PHP常量	 __FILE__：当前文件在服务器中的绝对存放路径：如D:\php\test\PHP-1.php[CRLF]     PHP_VERSION：服务器PHP的版本号，如5.2.3[CRLF]     PHP_OS：服务器操作系统，如WINNT。[CRLF]     TRUE/FALSE：代表true/false值。
php注释方式有三种,是那些	php注释方式有三种，分别为：[CRLF]     // 单行注释[CRLF]     /* 多行注释 */[CRLF]     # unix shell方式注释
PHP中变量如何定义	PHP中变量都以$开头，如$a,$ab等都是变量，而函数名和常量则都是直接使用字符串/下划线开头。
常量如何定义	常量使用define(name,value)的方式定义，注意常量只能包含字母数字下划线，且不能以数字开头。
PHP中有一些符号是有特殊用途的，列举下	PHP中有一些符号是有特殊用途的，列举如下：<br /><br />符号     意义<br />$     变量<br />&amp;     变量的地址 (加在变量前)<br />@     不显示错误信息 (加在函数前)<br />-&gt;     类的方法或者属性<br />=&gt;     数组的元素值<br />? :     三元运算子	
在HTML嵌入PHP脚本的三种办法	在HTML嵌入PHP脚本有三种办法：[CRLF]<script language="php">[CRLF]//嵌入方式一[CRLF]echo("test");[CRLF]</script>[CRLF][CRLF]<?[CRLF]//嵌入方式二[CRLF]echo "<br>test2";[CRLF]?>[CRLF][CRLF]<?php[CRLF]//嵌入方式三[CRLF]echo "<br>test3";[CRLF]?>
include()语句与require()语句区别	include()语句与require()语句[CRLF]    如果要根据条件或循环包含文件，需要使用include().[CRLF]    require()语句只是被简单的包含一次，任何的条件语句或循环等对其无效。[CRLF]   由于include()是一个特殊的语句结构，因此若语句在一个语句块中，则必须把他包含在一个语句块中。[CRLF]    
什么是PHP？	php是Hypertext Preprocessor的缩写，php是一种内嵌HTML的脚本语言。PHP的独特语法混合了c,java和perl及PHP式的新语法。这门语言的的目标是让网页开发人员快速的写出动态的网页。
什么是PHPer？	[CRLF]PHP programmer，指编写PHP的程序员 
什么是框架？	[CRLF]框架，即framework。其实就是某种应用的半成品，就是一组组件，供你选用完成你自己的系统。简单说就是使用别人搭好的舞台，你来做表演。而且，框架一般是成熟的，不断升级的软件。 
什么是模式？	[CRLF]模式，即pattern。其实就是解决某一类问题的方法论。你把解决某类问题的方法总结归纳到理论高度，那就是模式。
什么是模版？	[CRLF]PHP模板发展自Perl的Template。模板能够改善网站的结构,可以在几秒钟改变你的整个站点的外观; 抽象程序设计，没有垃圾HTML代码; 设计人员不需要关心全部的"模糊"代码; 运行更加的快速; 更容易重用旧的模版（对普通的表单而说） 
什么是类？	[CRLF]类是对某个对象的定义。它包含有关对象动作方式的信息，包括它的名称、方法、属性和事件。实际上它本身并不是对象，因为它不存在于内存中。当引用类的代码运行时，类的一个新的实例，即对象，就在内存中创建了。虽然只有一个类，但能从这个类在内存中创建多个相同类型的对象。 
什么是函数？	[CRLF]函数为程序设计人员提供了方便，通常在进行一个复杂的程序设计时，总是根据所要完成的功能，将程序划分为一些相对独立的部分，每一部分编写一个函数，从而使各部分充分独立，任务单一，程序清晰，易懂、易读、易维护
什么是session？	[CRLF]session用中文来解释就是会话期。一个会话期开始于用户输入一个站点的网址时，结束于他离开这个站点时。 
什么是socket?	[CRLF]    所谓socket通常也称作"套接字"，用于描述IP地址和端口，是一个通信链的句柄。应用程序通常通过"套接字"向网络发出请求或者应答网络请求。
$row[‘id’]与$row[id]的区别	$row[‘id’]的效率是$row[id]的7倍。
尽量不要在for循环中使用函数对吗	比如for ($x=0; $x < count($array); $x)每循环一次都会调用count()函数。
单引号比双引号快吗?	用单引号代替双引号来包含字符串，这样做会更快一些。因为PHP会在双引号包围的字符串中搜寻变量，单引号则不会。当然，只有当你不需要在字符串中包含变量时才可以这么做。
Apache是啥?	Apache是世界使用排名第一的Web服务器软件。它可以运行在几乎所有广泛使用的计算机平台上。Apache源于NCSAhttpd服务器，经过多次修改，成为世界上最流行的Web服务器软件之一。 
MySQL是什么	MySQL是一个开放源码的小型关系型数据库管理系统，开发者为瑞典MySQL AB公司。目前MySQL被广泛地应用在Internet上的中小型网站中。由于其体积小、速度快、总体拥有成本低
如何发送邮件	$Name = "Da Duder"; //senders name[CRLF]$email = "email@adress.com"; //senders e-mail adress[CRLF]$recipient = "PersonWhoGetsIt@emailadress.com"; //recipient[CRLF]$mail_body = "The text for the mail..."; //mail body[CRLF]$subject = "Subject for reviever"; //subject[CRLF]$header = "From: ". $Name . " <" . $email . ">\r\n"; //optional headerfields[CRLF][CRLF]mail($recipient, $subject, $mail_body, $header); //mail command :) 
何谓开源软件	<span style="background-color: rgb(204, 0, 0);">开放源码 免费</span>	
为什么要mvc	运用继承可以减少代码[CRLF]增加重用
什么是.ini文件	.ini文件是windows用的一种配置文件<br />一般把数据库的用户名密码放在里面管理<br /><br />基本格式是:<br />[server]<br />host = "localhost"<br />user = "admin"<br />pass = "<span style="color: rgb(204, 0, 0);">123456</span>"<br /><br />php用<span style="background-color: rgb(204, 0, 0);">parse_ini_file</span>读取该文件到一个hash<br />$configini = parse_ini_file("setting.ini", true);<br /><br /><span style="color: rgb(255, 0, 0);">$configini ["server"]["pass"]</span>的值就是123456	
如何从数组开头弹出一个元素	<code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 0, 187);">$stack&nbsp;</span><span style="color: rgb(0, 119, 0);">=&nbsp;array(</span><span style="color: rgb(221, 0, 0);">"orange"</span><span style="color: rgb(0, 119, 0);">,&nbsp;</span><span style="color: rgb(221, 0, 0);">"banana"</span><span style="color: rgb(0, 119, 0);">,&nbsp;</span><span style="color: rgb(221, 0, 0);">"apple"</span><span style="color: rgb(0, 119, 0);">,&nbsp;</span><span style="color: rgb(221, 0, 0);">"raspberry"</span><span style="color: rgb(0, 119, 0);">);<br /></span><span style="color: rgb(0, 0, 187);">$fruit&nbsp;</span><span style="color: rgb(0, 119, 0);">=&nbsp;</span><span style="color: rgb(0, 0, 187);">array_shift</span><span style="color: rgb(0, 119, 0);">(</span><span style="color: rgb(0, 0, 187);">$stack</span><span style="color: rgb(0, 119, 0);">);<br /></span></span></code><code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 119, 0);"></span><span style="color: rgb(221, 0, 0);">"orange"被弹出 数组减少一个元素</span></span></code><br />	
如何判断一个类有没有某个函数	$a = new A();<br /><br /><code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 119, 0);"></span><span style="color: rgb(0, 0, 187);">method_exists</span><span style="color: rgb(0, 119, 0);">(</span><span style="color: rgb(0, 0, 187);">$a</span><span style="color: rgb(0, 119, 0);">,</span><span style="color: rgb(221, 0, 0);">'read'</span><span style="color: rgb(0, 119, 0);">)</span></span></code>;<br />判断$a 有没有<span style="font-style: italic; text-decoration: underline;">read </span>这个函数<br />	
如何判断一个函数是否存在	<code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 119, 0);">if&nbsp;(</span><span style="color: rgb(0, 0, 187);">function_exists</span><span style="color: rgb(0, 119, 0);">(</span><span style="color: rgb(221, 0, 0);">'aaaaa'</span><span style="color: rgb(0, 119, 0);">))&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: rgb(221, 0, 0);">"存在函数<br&nbsp;></br&nbsp;></span></span></code><code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(221, 0, 0);">aaaaa</span></span></code><code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(221, 0, 0);"><br&nbsp;>"</br&nbsp;></span><span style="color: rgb(0, 119, 0);">;<br />}&nbsp;else&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: rgb(221, 0, 0);">"不存在<br&nbsp;>"</br&nbsp;></span><span style="color: rgb(0, 119, 0);">;<br />}</span></span></code>	
如何打印出011	$format = 'There are <span style="color: rgb(204, 0, 0);">%03d</span> monkeys in the <span style="background-color: rgb(204, 0, 0);">%s</span>';<br />printf($format, 11, 22);<br /><br /><pre style="background-color: rgb(204, 153, 51);">There are 011 monkeys in the 22</pre><br />	
如何在一个字符串中的单双引号反斜杠前面加发斜杠	<code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 0, 187);">$str&nbsp;</span><span style="color: rgb(0, 119, 0);">=&nbsp;</span><span style="color: rgb(221, 0, 0);">"Is&nbsp;your&nbsp;name&nbsp;O'reilly?"</span><span style="color: rgb(0, 119, 0);">;<br /><br /></span><span style="color: rgb(255, 128, 0);"></span><span style="color: rgb(0, 119, 0);">echo&nbsp;</span><span style="color: rgb(0, 0, 187);">add<span style="text-decoration: underline;">slashes</span></span><span style="color: rgb(0, 119, 0);">(</span><span style="color: rgb(0, 0, 187);">$str</span><span style="color: rgb(0, 119, 0);">);</span></span></code><br /><br /><code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(255, 128, 0);">//&nbsp;Outputs:&nbsp;Is&nbsp;your&nbsp;name&nbsp;O'reilly?</span></span></code><br /><br />反过来去掉斜杠用函数<br /><font size="4"><br /></font><h1 class="refname"><font size="4"><code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 0, 187);">$str&nbsp;</span><span style="color: rgb(0, 119, 0);">=&nbsp;</span><span style="color: rgb(221, 0, 0);">"Is&nbsp;your&nbsp;name&nbsp;O\'reilly?"</span><span style="color: rgb(0, 119, 0);">;<br /><br /></span><span style="color: rgb(255, 128, 0);"></span><span style="color: rgb(0, 119, 0);">echo&nbsp;</span><span style="color: rgb(0, 0, 187);">stripslashes</span><span style="color: rgb(0, 119, 0);">(</span><span style="color: rgb(0, 0, 187);">$str</span><span style="color: rgb(0, 119, 0);">);</span></span></code></font><br /></h1><h1 class="refname"><font><font size="4"><code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(255, 128, 0);">//&nbsp;Outputs:&nbsp;Is&nbsp;your&nbsp;name&nbsp;O'reilly?</span></span></code></font></font></h1>	
Html有哪些输入控件	<ul><li> <p>            Input (Button) 控件：<b> INPUT type="button"</b> 元素</p> </li><li> <p>            Input (Checkbox) 控件：<b>INPUT type="checkbox"</b> 元素</p> </li><li> <p>            Input (File) 控件：<b>INPUT type="file"</b> 元素</p> </li><li> <p>            Input (Hidden) 控件：<b>INPUT type="hidden"</b> 元素</p> </li><li> <p>            Input (Password) 控件：<b>INPUT type="password"</b> 元素</p> </li><li> <p>            Input (Radio) 控件：<b>INPUT type="radio"</b> 元素</p> </li><li> <p>            Input (Reset) 控件：<b>INPUT type="reset"</b> 元素</p> </li><li> <p>            Input (Submit) 控件：<b>INPUT type="submit"</b> 元素</p> </li><li> <p>            Input (Text) 控件：<b>INPUT type="text"</b> 元素</p></li></ul><a href="http://www.dreamdu.com/xhtml/tag_textarea/">textarea</a> 标签 -- 代表HTML表单多行输入域             <ul><li><strong>textarea</strong>标签是成对出现的,以<code>&lt;textarea&gt;</code>开始,以<code>&lt;/textarea&gt;</code>结束</li><li>属性:         <ul><li><a href="http://www.dreamdu.com/xhtml/attribute_collections/#common">Common</a> -- 一般属性</li><li><code>cols</code> -- 多行输入域的列数</li><li><code>rows</code> -- 多行输入域的行数</li><li><code>alt</code> -- 代表表单的提示文字,当鼠标停留时</li><li><a href="http://www.dreamdu.com/xhtml/attribute_accesskey/">accesskey</a> -- 表单的快捷键访问方式</li><li><a href="http://www.dreamdu.com/xhtml/attribute_disabled/">disabled</a> -- 输入域无法获得焦点,无法选择,以灰色显示,在表单中不起任何作用</li><li><a href="http://www.dreamdu.com/xhtml/attribute_readonly/">readonly</a> -- 输入域可以选择,但是无法修改</li><li><a href="http://www.dreamdu.com/xhtml/attribute_tabindex/">tabindex</a> -- 输入域,使用"tab"键的遍历顺序</li></ul>        </li></ul>	
如何显示一张表	<pre class="html"><code class="tag">&lt;table</code> <code class="attr">width</code><code class="tag">=</code><code class="attrvalue">"80%" </code><code class="attr">border</code><code class="tag">=</code><code class="attrvalue">"1"</code><code class="tag">&gt;</code><br /> <code class="tag">&lt;tr&gt;</code> <br />  <code class="tag">&lt;th&gt;</code>www.dreamdu.com<code class="tag">&lt;/th&gt;</code><br />  <code class="tag">&lt;th&gt;</code>.com域名的数量<code class="tag">&lt;/th&gt;</code><br />  <code class="tag">&lt;th&gt;</code>.cn域名的数量<code class="tag">&lt;/th&gt;</code><br />  <code class="tag">&lt;th&gt;</code>.net域名的数量<code class="tag">&lt;/th&gt;</code><br /> <code class="tag">&lt;/tr&gt;</code><br /> <code class="tag">&lt;tr&gt;</code><br />  <code class="tag">&lt;td&gt;</code>2003年<code class="tag">&lt;/td&gt;</code><br />  <code class="tag">&lt;td&gt;</code>1000<code class="tag">&lt;/td&gt;</code><br />  <code class="tag">&lt;td&gt;</code>2000<code class="tag">&lt;/td&gt;</code><br />  <code class="tag">&lt;td&gt;</code>3000<code class="tag">&lt;/td&gt;</code><br /> <code class="tag">&lt;/tr&gt;</code><br /> <code class="tag">&lt;tr&gt;</code><br />  <code class="tag">&lt;td&gt;</code>2004年<code class="tag">&lt;/td&gt;</code><br />  <code class="tag">&lt;td&gt;</code>4000<code class="tag">&lt;/td&gt;</code><br />  <code class="tag">&lt;td&gt;</code>5000<code class="tag">&lt;/td&gt;</code><br />  <code class="tag">&lt;td&gt;</code>6000<code class="tag">&lt;/td&gt;</code><br /> <code class="tag">&lt;/tr&gt;</code><br /> <code class="tag">&lt;tr&gt;</code><br />  <code class="tag">&lt;td&gt;</code>2005年<code class="tag">&lt;/td&gt;</code><br />  <code class="tag">&lt;td&gt;</code>7000<code class="tag">&lt;/td&gt;</code><br />  <code class="tag">&lt;td&gt;</code>8000<code class="tag">&lt;/td&gt;</code><br />  <code class="tag">&lt;td&gt;</code>9000<code class="tag">&lt;/td&gt;</code><br /> <code class="tag">&lt;/tr&gt;</code><br /><code class="tag">&lt;/table&gt;</code> <br /></pre>	
什么是CSRF	<span style="background-color: rgb(255, 204, 102);">Cross-site request forgery:</span><br />跨站请求伪造，也被称成为&ldquo;one click attack&rdquo;或者sessionriding，通常缩写为CSRF或者XSRF，是一种对网站的恶意利用。<br />尽管听起来像跨站脚本（XSS），但它与XSS非常不同，并且攻击方式几乎相左。XSS利用站点内的信任用户，而CSRF则<span style="text-decoration: underline; color: rgb(0, 0, 153);">通过伪装来自受信任用户的请求</span>来利用受信任的网站。与XSS攻击相比，CSRF攻击往往不大流行（因此对其进行防范的资源也相当稀少）和难以防范，所以被认为比XSS更具危险性。	
什么是XSS	<span id="reply_content_149409208"><span style="background-color: rgb(255, 204, 51);">XSS又叫CSS (Cross Site Script) ，</span><br />跨站脚本攻击。它指的是恶意攻击者往Web页面里插入恶意html代码，<span style="font-style: italic; text-decoration: underline;">当用户浏览该页之时</span>，<span style="color: rgb(0, 0, 153);">嵌入其中Web里面的html代码会被执行</span>，从而达到恶意用户的特殊目的.</span>	
Mysql GROUP妙用	<p><span>1&nbsp;<strong>GROUP_CONCAT</strong></span></p><p><span>mysql&gt; <strong>SELECT student_name,</strong></span></p><p><span>&nbsp;&nbsp;&nbsp; -&gt;&nbsp;&nbsp;&nbsp;&nbsp; <strong>GROUP_CONCAT(test_score)</strong></span></p><p><span>&nbsp;&nbsp;&nbsp; -&gt;&nbsp;&nbsp;&nbsp;&nbsp; <strong>FROM student</strong></span></p><p><span>&nbsp;&nbsp;&nbsp; -&gt;&nbsp;&nbsp;&nbsp;&nbsp; <strong>GROUP BY student_name;</strong></span></p><p><span>Or: </span></p><p><span>mysql&gt; <strong>SELECT student_name,</strong></span></p><p><span>&nbsp;&nbsp;&nbsp; -&gt;&nbsp;&nbsp;&nbsp;&nbsp; <strong>GROUP_CONCAT(DISTINCT test_score</strong></span></p><p><span>&nbsp;&nbsp;&nbsp; -&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>ORDER BY test_score DESC SEPARATOR ' ')</strong></span></p><p><span>&nbsp;&nbsp;&nbsp; -&gt;&nbsp;&nbsp;&nbsp;&nbsp; <strong>FROM student</strong></span></p><p><span>&nbsp;&nbsp;&nbsp; -&gt;&nbsp;&nbsp;&nbsp;&nbsp; <strong>GROUP BY student_name;</strong></span></p><p><span>在<span>MySQL</span>中<span>,</span>你可以获取表达式组合的连接值。你可以使用<span>DISTINCT</span>删去重复值。假若你希望多结果值进行排序，则应该使用<span>&nbsp; ORDER BY</span>子句。若要按相反顺序排列，将<span> DESC (</span>递减<span>) </span>关键词添加到你要用<span>ORDER BY </span>子句进行排序的列名称中。默认顺序为升序；可使用<span>ASC</span>将其明确指定。<span>&nbsp;&nbsp; SEPARATOR </span>后面跟随应该被插入结果的值中间的字符串值。默认为逗号<span> (</span>&lsquo;<span>,</span>&rsquo;<span>)</span>。通过指定<span>SEPARATOR '' </span>，你可以删除所有分隔符。<span> </span></span></p><span></span><span><span><p><span><span>PS：就是可以在一个语句中得到 GROUP BY 被 聚合的项的每个子值的一个组合的字符串</span></span></p></span></span><p><span><span>&nbsp;2 <strong>WITH ROLLUP</strong></span></span></p><p><span><span><span>GROUP BY</span><span>子句允许一个将额外行添加到简略输出端<span> WITH ROLLUP </span>修饰符。这些行代表高层<span>(</span>或高聚集<span>)</span>简略操作。<span>ROLLUP </span>因而允许你在多层分析的角度回答有关问询的问题</span></span></span></p><span><span><p><span>或者你可以使用<span> ROLLUP, </span>它能用一个问询提供双层分析。将一个<span> WITH ROLLUP</span>修饰符添加到<span>GROUP BY </span>语句，使询问产生另一行结果，该行显示了所有年份的总价值：<span> </span></span></p><p><span>mysql&gt; <strong>SELECT year, SUM(profit) FROM sales GROUP BY year WITH ROLLUP;</strong></span></p><p><span>+------+-------------+</span></p><p><span>| year | SUM(profit) |</span></p><p><span>+------+-------------+</span></p><p><span>| 2000 |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4525 |</span></p><p><span>| 2001 |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3010 |</span></p><p><span>| NULL |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7535 |</span></p><p><span>+------+-------------+</span></p><p><span>总计高聚集行被年份列中的<span>NULL</span>值标出。<span> </span></span></p><p><span>当有多重<span> GROUP BY </span>列时，<span>ROLLUP</span>产生的效果更加复杂。这时，每次在除了最后一个分类列之外的任何列出现一个 &ldquo;<span>break</span>&rdquo;<span> (</span>值的改变<span>) </span>，则问讯会产生一个高聚集累计行。<span> </span></span></p><p><span>例如，在没有<span> ROLLUP</span>的情况下，一个以年、国家和产品为基础的关于<span> sales </span>表的一览表可能如下所示：<span> </span></span></p><p><span>mysql&gt; <strong>SELECT year, country, product, SUM(profit)</strong></span></p><p><span>&nbsp;&nbsp;&nbsp; -&gt; <strong>FROM sales</strong></span></p><p><span>&nbsp;&nbsp;&nbsp; -&gt; <strong>GROUP BY year, country, product;</strong></span></p><p><span>+------+---------+------------+-------------+</span></p><p><span>| year | country | product&nbsp;&nbsp;&nbsp; | SUM(profit) |</span></p><p><span>+------+---------+------------+-------------+</span></p><p><span>| 2000 | Finland | Computer&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1500 |</span></p><p><span>| 2000 | Finland | Phone&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 100 |</span></p><p><span>| 2000 | India&nbsp;&nbsp; | Calculator |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 150 |</span></p><p><span>| 2000 | India&nbsp;&nbsp; | Computer&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1200 |</span></p><p><span>| 2000 | USA&nbsp;&nbsp;&nbsp;&nbsp; | Calculator |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 75 |</span></p><p><span>| 2000 | USA&nbsp;&nbsp;&nbsp;&nbsp; | Computer&nbsp;&nbsp; |&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1500 |</span></p><p><span>| 2001 | Finland | Phone&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10 |</span></p><p><span>| 2001 | USA&nbsp;&nbsp;&nbsp;&nbsp; | Calculator |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 50 |</span></p><p><span>| 2001 | USA&nbsp;&nbsp;&nbsp;&nbsp; | Computer&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2700 |</span></p><p><span>| 2001 | USA&nbsp;&nbsp;&nbsp;&nbsp; | TV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 250 |</span></p><p><span>+------+---------+------------+-------------+</span></p><p><span>表示总值的输出结果仅位于年<span>/</span>国家<span>/</span>产品的分析级别。当添加了<span> ROLLUP</span>后， 问询会产生一些额外的行：<span> </span></span></p><p><span>mysql&gt; <strong>SELECT year, country, product, SUM(profit)</strong></span></p><p><span>&nbsp;&nbsp;&nbsp; -&gt; <strong>FROM sales</strong></span></p><p><span>&nbsp;&nbsp;&nbsp; -&gt; <strong>GROUP BY year, country, product WITH ROLLUP;</strong></span></p><p><span>+------+---------+------------+-------------+</span></p><p><span>| year | country | product&nbsp;&nbsp;&nbsp; | SUM(profit) |</span></p><p><span>+------+---------+------------+-------------+</span></p><p><span>| 2000 | Finland | Computer&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1500 |</span></p><p><span>| 2000 | Finland | Phone&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 100 |</span></p><p><span>| 2000 | Finland | NULL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1600 |</span></p><p><span>| 2000 | India&nbsp;&nbsp; | Calculator |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 150 |</span></p><p><span>| 2000 | India&nbsp;&nbsp; | Computer&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1200 |</span></p><p><span>| 2000 | India&nbsp;&nbsp; | NULL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1350 |</span></p><p><span>| 2000 | USA&nbsp;&nbsp;&nbsp;&nbsp; | Calculator |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 75 |</span></p><p><span>| 2000 | USA&nbsp;&nbsp;&nbsp;&nbsp; | Computer&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1500 |</span></p><p><span>| 2000 | USA&nbsp;&nbsp;&nbsp;&nbsp; | NULL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1575 |</span></p><p><span>| 2000 | NULL&nbsp;&nbsp;&nbsp; | NULL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4525 |</span></p><p><span>| 2001 | Finland | Phone&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10 |</span></p><p><span>| 2001 | Finland | NULL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10 |</span></p><p><span>| 2001 | USA&nbsp;&nbsp;&nbsp;&nbsp; | Calculator |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 50 |</span></p><p><span>| 2001 | USA&nbsp;&nbsp;&nbsp;&nbsp; | Computer&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2700 |</span></p><p><span>| 2001 | USA&nbsp;&nbsp;&nbsp;&nbsp; | TV&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 250 |</span></p><p><span>| 2001 | USA&nbsp;&nbsp;&nbsp;&nbsp; | NULL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;3000 |</span></p><p><span>| 2001 | NULL&nbsp;&nbsp;&nbsp; | NULL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3010 |</span></p><p><span>| NULL | NULL&nbsp;&nbsp;&nbsp; | NULL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7535 |</span></p><p><span>+------+---------+------------+-------------+</span></p><p>&nbsp;</p><span><p><span>当你使用<span> ROLLUP</span>时<span>, </span>你不能同时使用<span> ORDER BY</span>子句进行结果排序。换言之，<span> ROLLUP </span>和<span>ORDER BY </span>是互相排斥的。然而，你仍可以对排序进行一些控制。在<span> MySQL</span>中，<span> GROUP BY </span>可以对结果进行排序，而且你可以在<span>GROUP BY</span>列表指定的列中使用明确的<span> ASC</span>和<span>DESC</span>关键词，从而对个别列进行排序。<span> (</span>不论如何排序被<span>ROLLUP</span>添加的较高级别的总计行仍出现在它们被计算出的行后面）<span>。 </span></span></p><p><span>LIMIT</span><span>可用来限制返回客户端的行数。<span>LIMIT </span>用在<span> ROLLUP</span>后面<span>, </span>因此这个限制 会取消被<span>ROLLUP</span>添加的行</span></p></span></span></span>	
如何定义一个类的构造函数	<ol><li>用该类的类名作为函数名</li><li>用函数__construct</li></ol><div style="text-align: left; margin-left: 40px;">class A{<br />&nbsp;&nbsp; function A(){<br />&nbsp;&nbsp; }<br />}<br /><br />class A{<br />&nbsp;&nbsp; function __construct(){<br />&nbsp;&nbsp; }<br />}<br /></div>	
Mysql limit 如何使用	<span style="color: rgb(0, 0, 0);">mysql</span><span style="color: rgb(128, 128, 128);">&gt;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 255);">SELECT</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(128, 128, 128);">*</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 255);">FROM</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 255);">table</span><span style="color: rgb(0, 0, 0);">&nbsp;LIMIT&nbsp;</span><span style="font-weight: bold; color: rgb(128, 0, 0);">5</span><span style="color: rgb(0, 0, 0);">,</span><span style="font-weight: bold; color: rgb(128, 0, 0);">10</span><span style="color: rgb(0, 0, 0);">;&nbsp;&nbsp;</span><span style="color: rgb(128, 128, 128);">//</span><span style="color: rgb(0, 0, 0);">&nbsp;检索记录行&nbsp;</span><span style="font-weight: bold; color: rgb(128, 0, 0);">6</span><span style="color: rgb(128, 128, 128);">-</span><span style="font-weight: bold; color: rgb(128, 0, 0);">15</span><span style="color: rgb(0, 0, 0);"><br /><img style="cursor: pointer;" title="点击图片可在新窗口打开" alt="" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" align="top" /><br /><img style="cursor: pointer;" title="点击图片可在新窗口打开" alt="" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" align="top" /></span><span style="color: rgb(128, 128, 128);">//</span><span style="color: rgb(0, 0, 0);">为了检索从某一个偏移量到记录集的结束所有的记录行，可以指定第二个参数为&nbsp;</span><span style="color: rgb(128, 128, 128);">-</span><span style="font-weight: bold; color: rgb(128, 0, 0);">1</span><span style="color: rgb(0, 0, 0);">：&nbsp;<br /><img style="cursor: pointer;" title="点击图片可在新窗口打开" alt="" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" align="top" />mysql</span><span style="color: rgb(128, 128, 128);">&gt;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 255);">SELECT</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(128, 128, 128);">*</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 255);">FROM</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 255);">table</span><span style="color: rgb(0, 0, 0);">&nbsp;LIMIT&nbsp;</span><span style="font-weight: bold; color: rgb(128, 0, 0);">95</span><span style="color: rgb(0, 0, 0);">,</span><span style="color: rgb(128, 128, 128);">-</span><span style="font-weight: bold; color: rgb(128, 0, 0);">1</span><span style="color: rgb(0, 0, 0);">;&nbsp;</span><span style="color: rgb(128, 128, 128);">//</span><span style="color: rgb(0, 0, 0);">&nbsp;检索记录行&nbsp;</span><span style="font-weight: bold; color: rgb(128, 0, 0);">96</span><span style="color: rgb(128, 128, 128);">-</span><span style="color: rgb(0, 0, 0);">last.<br /><img style="cursor: pointer;" title="点击图片可在新窗口打开" alt="" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" align="top" /><br /><img style="cursor: pointer;" title="点击图片可在新窗口打开" alt="" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" align="top" /></span><span style="color: rgb(128, 128, 128);">//</span><span style="color: rgb(0, 0, 0);">如果只给定一个参数，它表示返回最大的记录行数目：&nbsp;<br /><img style="cursor: pointer;" title="点击图片可在新窗口打开" alt="" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" align="top" />mysql</span><span style="color: rgb(128, 128, 128);">&gt;</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 255);">SELECT</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(128, 128, 128);">*</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 255);">FROM</span><span style="color: rgb(0, 0, 0);">&nbsp;</span><span style="color: rgb(0, 0, 255);">table</span><span style="color: rgb(0, 0, 0);">&nbsp;LIMIT&nbsp;</span><span style="font-weight: bold; color: rgb(128, 0, 0);">5</span><span style="color: rgb(0, 0, 0);">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: rgb(128, 128, 128);">//</span><span style="color: rgb(0, 0, 0);">检索前&nbsp;</span><span style="font-weight: bold; color: rgb(128, 0, 0);">5</span><span style="color: rgb(0, 0, 0);">&nbsp;个记录行<br /><img style="cursor: pointer;" title="点击图片可在新窗口打开" alt="" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" align="top" /><br /><img style="cursor: pointer;" title="点击图片可在新窗口打开" alt="" src="http://images.csdn.net/syntaxhighlighting/OutliningIndicators/None.gif" align="top" /></span><span style="color: rgb(128, 128, 128);">//</span><span style="color: rgb(0, 0, 0);">换句话说，LIMIT&nbsp;n&nbsp;等价于&nbsp;LIMIT&nbsp;</span><span style="font-weight: bold; color: rgb(128, 0, 0);">0</span><span style="color: rgb(0, 0, 0);">,n。</span>	
知道那些开源软件	Eclipse<br />LAMP<br />SVN<br />DISCUZ 论坛<br />pukiwiki wiki<br /><br />	
Smarty如何循环显示	<span style="color: rgb(153, 102, 51);">$list=array("aaa","bbb")</span><br /><br /><span style="background-color: rgb(51, 204, 0);">{foreach from=$list item=name}</span><br style="background-color: rgb(51, 204, 0);" /><span style="background-color: rgb(51, 204, 0);">{$name}</span><br style="background-color: rgb(51, 204, 0);" /><span style="background-color: rgb(51, 204, 0);">{/foreach}</span><br /><br /><span style="color: rgb(0, 0, 153);">aaa</span><br style="color: rgb(0, 0, 153);" /><span style="color: rgb(0, 0, 153);">bbb</span><br />	
如何截取一个字符串的前5个字符	<code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 0, 187);">$rest&nbsp;</span><span style="color: rgb(0, 119, 0);">=&nbsp;</span><span style="color: rgb(0, 0, 187);">substr</span><span style="color: rgb(0, 119, 0);">(</span><span style="color: rgb(221, 0, 0);">"abcdef"</span><span style="color: rgb(0, 119, 0);">, 0</span><span style="color: rgb(0, 0, 187);"></span><span style="color: rgb(0, 119, 0);">, </span><span style="color: rgb(0, 0, 187);">5</span><span style="color: rgb(0, 119, 0);">);&nbsp;</span><span style="color: rgb(255, 128, 0);">//&nbsp;returns&nbsp;"abcde"</span></span></code>	
在新窗口打开链接html	&lt;a href=/ <span style="color: rgb(51, 0, 51); font-weight: bold; background-color: rgb(204, 255, 255);">target=_blank</span>&gt;new page&lt;/a&gt;	
如何在一个字符串里面找另外一个字符串并把找到的字符串及其后面的返回	<code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 0, 187);">$email&nbsp;&nbsp;</span><span style="color: rgb(0, 119, 0);">=&nbsp;</span><span style="color: rgb(221, 0, 0);">'name@example.com'</span><span style="color: rgb(0, 119, 0);">;<br /></span><span style="color: rgb(0, 0, 187);">$domain&nbsp;</span><span style="color: rgb(0, 119, 0);">=&nbsp;</span><span style="color: rgb(0, 0, 187);">strstr</span><span style="color: rgb(0, 119, 0);">(</span><span style="color: rgb(0, 0, 187);">$email</span><span style="color: rgb(0, 119, 0);">,&nbsp;</span><span style="color: rgb(221, 0, 0);">'@'</span><span style="color: rgb(0, 119, 0);">);<br />echo&nbsp;</span><span style="color: rgb(0, 0, 187);">$domain</span><span style="color: rgb(0, 119, 0);">;&nbsp;</span><span style="color: rgb(255, 128, 0);">//&nbsp;prints&nbsp;@example.com<br /><br />找位置的话<br /></span></span></code><code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 0, 187);">$pos&nbsp;</span><span style="color: rgb(0, 119, 0);">=&nbsp;</span><span style="color: rgb(0, 0, 187);">strpos</span><span style="color: rgb(0, 119, 0);">(</span></span></code><code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 0, 187);">$email</span></span></code><code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 119, 0);"></span><span style="color: rgb(0, 119, 0);">,</span></span></code><code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 119, 0);"></span><span style="color: rgb(221, 0, 0);">'@'</span></span></code><code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 119, 0);"></span><span style="color: rgb(0, 119, 0);">);</span></span></code> //4<br />	
 MySQL存储引擎种类	<div id="blog_text" class="cnt"><h2 style="margin: 12pt 0cm 3pt 21.25pt; text-indent: -21.25pt;"><a name="_Toc183405985"><span style="font-style: normal;"><span style="">1<span style="font-family: Times New Roman; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span></span></span><span style="font-style: normal;">MySQL</span></a><span style=""><span style="font-style: normal;">存储引擎</span></span><span style="font-style: normal;">种类</span><span style="font-style: normal;"></span></h2><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman">MySQL</font></span><span style="">支持数个存储引擎作作为对不同表的类型的处理器。</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman"> </font></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span style="">当年创建一个新表的时候，你可以通过添加一个</span><span><font face="Times New Roman">ENGINE</font></span><span style="">选项到</span><span><font face="Times New Roman">CREATE TABLE</font></span><span style="">语句来告诉</span><span><font face="Times New Roman">MySQL</font></span><span style="">你要创建什么类型的表：</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman">CREATE TABLE t (i INT) ENGINE = INNODB;</font></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span style="">如果你省略掉</span><span><font face="Times New Roman">ENGINE</font></span><span style="">选项，默认的存储引擎被使用。一般的默认是</span><span><font face="Times New Roman">MyISAM</font></span><span style="">。</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman"> </font></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman">MySQL</font></span><span style="">服务器（</span><span><font face="Times New Roman">3.23</font></span><span style="">至该系列的最高版本，所有</span><span><font face="Times New Roman">4.0</font></span><span style="">版本，以及更高版本）支持采用</span><span><font face="Times New Roman">InnoDB</font></span><span style="">和</span><span><font face="Times New Roman">BDB</font></span><span style="">事务存储引擎的事务。</span><span><font face="Times New Roman">InnoDB</font></span><span style="">提供了全面的</span><span><font face="Times New Roman">ACID</font></span><span style="">兼容性。</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman"> </font></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman">MySQL</font></span><span style="">服务器中的其他非事务性存储引擎（如</span><span><font face="Times New Roman">MyISAM</font></span><span style="">）遵从不同的数据完整性范例，称之为</span><span><font face="Times New Roman">&ldquo;</font></span><span style="">原子操作</span><span><font face="Times New Roman">&rdquo;</font></span><span style="">。按照事务术语，</span><span><font face="Times New Roman">MyISAM</font></span><span style="">表总能高效地工作在</span><span><font face="Times New Roman">AUTOCOMMIT=1</font></span><span style="">模式下。原子操作通常能提供可比较的完整性以及更好的性能。与经过优化调整的最快的事务性表相比，它的速度快</span><span><font face="Times New Roman">3</font></span><span style="">～</span><span><font face="Times New Roman">5</font></span><span style="">倍。</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman"> </font></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span style="">由于</span><span><font face="Times New Roman">MySQL</font></span><span style="">服务器支持两种范例，因而你能决定是否利用原子操作的速度更好地服务于你的应用程序，或使用事务特性。该选择可按表进行。</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman"> </font></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span style="">正如所阐述的那样，事务性和非事务性表类型之间的权衡主要取决于性能。事务性表对内存和磁盘空间的要求更高，</span><span><font face="Times New Roman">CPU</font></span><span style="">开销也更大。另一方面，多种事务性表类型，如</span><span><font face="Times New Roman">InnoDB</font></span><span style="">，也能提供很多显著特性。</span><span><font face="Times New Roman">MySQL</font></span><span style="">服务器的模块化设计允许同时使用不同的存储引擎，以满足不同的要求，并在所有情形下，提供最佳性能。</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman"> </font></span></p><h2 style="margin: 12pt 0cm 3pt 27pt; text-indent: -27pt;"><a name="_Toc183405986"><span style="font-style: normal;"><span style="">1.1<span style="font-family: Times New Roman; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">  </span></span></span><span style="font-style: normal;">MyISAM</span></a><span style=""><span style="font-style: normal;">存储引擎</span></span><span style="font-style: normal;"></span></h2><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span style="">管理<span style="color: blue;">非事务表</span>。它提供高速存储和检索，以及全文搜索能力。</span><span><font face="Times New Roman">MyISAM</font></span><span style="">在所有</span><span><font face="Times New Roman">MySQL</font></span><span style="">配置里被支持，它是默认的存储引擎。</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman"> </font></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span style="">每个</span><span><font face="Times New Roman">MyISAM</font></span><span style="">表在磁盘上存储成三个文件。第一个文件的名字以表的名字开始，扩展名指出文件类型。</span><span><font face="Times New Roman">.frm</font></span><span style="">文件存储表定义。数据文件的扩展名为</span><span><font face="Times New Roman">.MYD (MYData)</font></span><span style="">。索引文件的扩展名是</span><span><font face="Times New Roman">.MYI (MYIndex)</font></span><span style="">。</span><font face="Times New Roman"> </font></p><h2 style="margin: 12pt 0cm 3pt 27pt; text-indent: -27pt;"><a name="_Toc183405987"><span style="font-style: normal;"><span style="">1.2<span style="font-family: Times New Roman; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">  </span></span></span><span style="font-style: normal;">InnoDB</span></a><span style=""><span style="font-style: normal;">存储引擎</span></span><span style="font-style: normal;"></span></h2><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><a name="id2935155"></a><a name="id2935162"></a><a name="id2935172"></a><a name="id2935179"></a><span><font face="Times New Roman">InnoDB</font></span><span style="">给</span><span><font face="Times New Roman">MySQL</font></span><span style="">提供了具有提交，回滚和崩溃恢复能力的<span style="color: blue;">事务安全</span>（</span><span><font face="Times New Roman">ACID</font></span><span style="">兼容）存储引擎。</span><span><font face="Times New Roman">InnoDB</font></span><span style="">锁定在行级并且也在</span><span><font face="Times New Roman">SELECT</font></span><span style="">语句提供一个</span><span><font face="Times New Roman">Oracle</font></span><span style="">风格一致的非锁定读。这些特色增加了多用户部署和性能。没有在</span><span><font face="Times New Roman">InnoDB</font></span><span style="">中扩大锁定的需要，因为在</span><span><font face="Times New Roman">InnoDB</font></span><span style="">中行级锁定适合非常小的空间。</span><span><font face="Times New Roman">InnoDB</font></span><span style="">也支持</span><span><font face="Times New Roman">FOREIGN KEY</font></span><span style="">强制。在</span><span><font face="Times New Roman">SQL</font></span><span style="">查询中，你可以自由地将</span><span><font face="Times New Roman">InnoDB</font></span><span style="">类型的表与其它</span><span><font face="Times New Roman">MySQL</font></span><span style="">的表的类型混合起来，甚至在同一个查询中也可以混合。</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman"> </font></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman">InnoDB</font></span><span style="">是为处理巨大数据量时的最大性能设计。它的</span><span><font face="Times New Roman">CPU</font></span><span style="">效率可能是任何其它基于磁盘的关系数据库引擎所不能匹敌的。</span><font face="Times New Roman"> </font></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman"> </font></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman">InnoDB</font></span><span style="">存储引擎被完全与</span><span><font face="Times New Roman">MySQL</font></span><span style="">服务器整合，</span><span><font face="Times New Roman">InnoDB</font></span><span style="">存储引擎为在主内存中缓存数据和索引而维持它自己的缓冲池。</span><span><font face="Times New Roman">InnoDB</font></span><span style="">存储它的表＆索引在一个表空间中，表空间可以包含数个文件。</span><span><font face="Times New Roman">InnoDB </font></span><span style="">表可以是任何尺寸，即使在文件尺寸被限制为</span><span><font face="Times New Roman">2GB</font></span><span style="">的操作系统上。</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman"> </font></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman">InnoDB</font></span><span style="">也默认被包括在所有</span><span><font face="Times New Roman">MySQL 5.1</font></span><span style="">二进制分发版里。</span></p><h2 style="margin: 12pt 0cm 3pt 27pt; text-indent: -27pt;"><a name="_Toc183405988"><span style="font-style: normal;"><span style="">1.3<span style="font-family: Times New Roman; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">  </span></span></span><span style="font-style: normal;">BDB (BerkeleyDB)</span></a><span style=""><span style="font-style: normal;">存储引擎</span></span><span style="font-style: normal;"></span></h2><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman">BDB</font></span><span style="">提供<span style="color: blue;">事务安全</span>。</span><span><font face="Times New Roman">BDB</font></span><span style="">被包含在为支持它的操作系统发布的</span><span><font face="Times New Roman">MySQL-Max</font></span><span style="">二进制分发版里。</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman"> </font></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman">MySQL AB</font></span><span style="">与</span><span><font face="Times New Roman">Sleepycat</font></span><span style="">紧密合作工作以保持</span><span><font face="Times New Roman">MySQL/BDB</font></span><span style="">接口的质量在高水平。即使</span><span><font face="Times New Roman">Berkeley DB</font></span><span style="">其本身是非常能经受考验和非常可靠的。</span><span><font face="Times New Roman">MySQL</font></span><span style="">接口仍然被认为是第三等质量的。</span></p><h2 style="margin: 12pt 0cm 3pt 27pt; text-indent: -27pt;"><a name="_Toc183405989"><span style="font-style: normal;"><span style="">1.4<span style="font-family: Times New Roman; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">  </span></span></span><span style="font-style: normal;">MEMORY (HEAP)</span></a><span style=""><span style="font-style: normal;">存储引擎</span></span><span style="font-style: normal;"></span></h2><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><a name="id2949485"></a><a name="id2949494"></a><a name="id2949503"></a><a name="id2949513"></a><a name="id2949522"></a><a name="id2949533"></a><span><font face="Times New Roman">MEMORY</font></span><span style="">存储引擎用存在内存中的内容来创建表。这些在以前被认识为</span><span><font face="Times New Roman">HEAP</font></span><span style="">表。</span><span><font face="Times New Roman">MEMORY</font></span><span style="">是一个首选的术语，虽然为向下兼容，</span><span><font face="Times New Roman">HEAP</font></span><span style="">依旧被支持。</span><font face="Times New Roman"> <span>MEMORY</span></font><span style="">存储引擎处理非事务表，这个引擎也都被默认包含在</span><span><font face="Times New Roman">MySQL</font></span><span style="">中。</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman"> </font></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span style="">每个</span><span><font face="Times New Roman">MEMORY</font></span><span style="">表和一个磁盘文件关联起来。文件名由表的名字开始，并且由一个</span><span><font face="Times New Roman">.frm</font></span><span style="">的扩展名来指明它存储的表定义。</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman"> </font></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span style="">如它们名字所指明的，</span><span><font face="Times New Roman">MEMORY</font></span><span style="">表被存储在内存中，且默认使用哈希索引。这使得它们非常快，并且对创建临时表非常有用。可是，当服务器关闭之时，所有存储在</span><span><font face="Times New Roman">MEMORY</font></span><span style="">表里的数据被丢失。因为表的定义被存在磁盘上的</span><span><font face="Times New Roman">.frm</font></span><span style="">文件中，所以表自身继续存在，在服务器重启动时它们是空的。</span></p><h2 style="margin: 12pt 0cm 3pt 27pt; text-indent: -27pt;"><a name="_Toc183405990"><span style="font-style: normal;"><span style="">1.5<span style="font-family: Times New Roman; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">  </span></span></span><span style="font-style: normal;">NDB Cluster</span></a><span style=""><span style="font-style: normal;">存储引擎</span></span><span style="font-style: normal;"></span></h2><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman">NDB Cluster</font></span><span style="">是被</span><span><font face="Times New Roman">MySQL Cluster</font></span><span style="">用来实现分割到多台计算机上的表的存储引擎。它在</span><span><font face="Times New Roman">MySQL-Max 5.1</font></span><span style="">二进制分发版里提供。这个存储引擎当前只被</span><span><font face="Times New Roman">Linux, Solaris, </font></span><span style="">和</span><span><font face="Times New Roman">Mac OS X </font></span><span style="">支持。</span></p><h2 style="margin: 12pt 0cm 3pt 27pt; text-indent: -27pt;"><a name="_Toc183405991"><span style="font-style: normal;"><span style="">1.6<span style="font-family: Times New Roman; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">  </span></span></span><span style="font-style: normal;">其它存储引擎</span></a><span style="font-style: normal;"></span></h2><p class="MsoNormal" style="margin: 0cm 0cm 0pt 42.25pt; text-indent: -21pt;"><span style=""><span style="">&oslash;<span style="font-family: Times New Roman; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span></span></span><span><font face="Times New Roman">EXAMPLE</font></span><span style="">存储引擎是一个</span><span><font face="Times New Roman">&ldquo;</font></span><span style="">存根</span><span><font face="Times New Roman">&rdquo;</font></span><span style="">引擎，它不做什么。你可以用这个引擎创建表，但没有数据被存储于其中或从其中检索。这个引擎的目的是服务，在</span><span><font face="Times New Roman">MySQL</font></span><span style="">源代码中的一个例子，它演示说明如何开始编写新存储引擎。同样，它的主要兴趣是对开发者。</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21.25pt;"><span><font face="Times New Roman"> </font></span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 42.25pt; text-indent: -21pt;"><span style=""><span style="">&oslash;<span style="font-family: Times New Roman; font-style: normal; font-variant: normal; font-weight: normal; font-size: 7pt; line-height: normal; font-size-adjust: none; font-stretch: normal;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span></span></span><span><font face="Times New Roman">ARCHIVE</font></span><span style="">存储引擎被用来无索引地，非常小地覆盖存储的大量数据。</span></p><p class="MsoNormal" style="margin: 0cm 0cm 0pt 21pt;"><span><font face="Times New Roman"> </font></span></p><span style="font-size: 10.5pt;">CSV</span><span style="font-size: 10.5pt;">存储引擎把数据以逗号分隔的格式存储在文本文件中。</span></div>	
MySQL提供那些索引类型	MySQL提供多种索引类型供选择：<ul class="content"><li><span style="color: rgb(0, 204, 204); background-color: rgb(255, 204, 102);">普通索引</span><br />这是最基本的索引类型，而且它没有唯一性之类的限制。普通索引可以通过以下几种方式创建： <ul class="content"><li type="circle">创建索引，例如CREATE INDEX &lt;索引的名字&gt; ON tablename (列的列表); </li><li type="circle">修改表，例如ALTER TABLE tablename ADD INDEX [索引的名字] (列的列表); </li><li type="circle">创建表的时候指定索引，例如CREATE TABLE tablename ( [...], INDEX [索引的名字] (列的列表) );</li></ul></li><li><span style="background-color: rgb(255, 204, 102);">唯一性索引</span><br />这种索引和前面的&ldquo;普通索引&rdquo;基本相同，但有一个区别：索引列的所有值都只能出现一次，即必须唯一。唯一性索引可以用以下几种方式创建： <ul class="content"><li type="circle">创建索引，例如CREATE UNIQUE INDEX &lt;索引的名字&gt; ON tablename (列的列表); </li><li type="circle">修改表，例如ALTER TABLE tablename ADD UNIQUE [索引的名字] (列的列表); </li><li type="circle">创建表的时候指定索引，例如CREATE TABLE tablename ( [...], UNIQUE [索引的名字] (列的列表) );</li></ul></li><li><span style="background-color: rgb(255, 204, 102);">主键</span><br />主键是一种唯一性索引，但它必须指定为&ldquo;PRIMARYKEY&rdquo;。如果你曾经用过AUTO_INCREMENT类型的列，你可能已经熟悉主键之类的概念了。主键一般在创建表的时候指定，例如&ldquo;CREATETABLE tablename ( [...], PRIMARY KEY (列的列表) );&rdquo;。但是，我们也可以通过修改表的方式加入主键，例如&ldquo;ALTER TABLE tablename ADD PRIMARY KEY (列的列表);&rdquo;。每个表只能有一个主键。 </li><li><span style="background-color: rgb(255, 204, 0);">全文索引</span><br />MySQL从3.23.23版开始支持全文索引和全文检索。在MySQL中，全文索引的索引类型为FULLTEXT。全文索引可以在VARCHAR或者TEXT类型的列上创建。它可以通过CREATE TABLE命令创建，也可以通过ALTERTABLE或CREATE INDEX命令创建。对于大规模的数据集，通过ALTER TABLE（或者CREATEINDEX）命令创建全文索引要比把记录插入带有全文索引的空表更快。</li></ul>	
什么是CRUD	CRUD是指在做计算处理时的<span style="background-color: rgb(204, 255, 255);">增加、查询（重新得到数据）、更新和删除</span>几个单词的首字母简写。主要被用在描述软件系统中数据库或者持久层的基本操作功能。 <br />	
什么是ROR	Ruby on Rails是一个 Web 应用程序框架,是一个相对较新的 Web 应用程序框架，构建在 Ruby 语言之上。它被宣传为现有企业框架的一个替代，而它的目标，简而言之，就是让生活，至少是 Web 开发方面的生活，变得更轻松。<br /><br />	
Java 2平台有哪3个版本	Java 2平台有3个版本，它们是适用于小型设备和智能卡的Java 2平台Micro版（Java 2 Platform MicroEdition，<span style="background-color: rgb(255, 204, 51);">J2ME</span>）、适用于桌面系统的Java 2平台标准版（Java 2 Platform StandardEdition，<span style="background-color: rgb(255, 204, 51);">J2SE</span>）、适用于创建服务器应用程序和服务的Java 2平台企业版（Java 2 Platform EnterpriseEdition，<span style="background-color: rgb(204, 153, 51);">J2EE</span>）。 <br /><br />	
Php的优点有哪些	七个理由<br />   1、速度、速度、速度 <br />  2、高级内存管理 <br />3、完全免费,简单易懂<br />   4、MySQL使PHP更精彩 <br />    PHP与MySQL的组合既简单又精彩。PHP有许多管理和维护MySQL的工具，对MySQL的支持是最全面的。许多有用的函数如mysql_insert_id和MySQL_affected_rows等，其他的数据库则没有。 <br />    5、Java和C++的风格 <br />    PHP支持结构化编程,PHP象Java和C++一样的继承性使一个大型的程序中到处都充满了类的影子<br />    6、Bug的处理。 <br />    7、移植性 <br />    PHP代码可以运行在Solaris、Linux和许多其他的操作系统中，我的心里感到安慰。	
Php如何执行linux命令	<code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 119, 0);">echo&nbsp;</span><span style="color: rgb(0, 0, 187);">exec</span><span style="color: rgb(0, 119, 0);">(</span><span style="color: rgb(221, 0, 0);">'whoami'</span><span style="color: rgb(0, 119, 0);">);</span></span></code>	
Php文件名的扩展名是什么	<font style="background-color: rgb(255, 204, 0);" size="3">.php</font>	
如何取得当前的秒数	<code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 119, 0);"></span><span style="color: rgb(0, 0, 187);">time</span><span style="color: rgb(0, 119, 0);">()<br /><br /></span></span></code>Returns the current time measured in the number of seconds since   the Unix Epoch (January 1 1970 00:00:00 GMT).  <br />	
如何定义一个函数	<code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 119, 0);">function&nbsp;</span><span style="color: rgb(0, 0, 187);">original</span><span style="color: rgb(0, 119, 0);">()&nbsp;{<br />&nbsp;&nbsp;echo&nbsp;</span><span style="color: rgb(221, 0, 0);">"In&nbsp;a&nbsp;function\n"</span><span style="color: rgb(0, 119, 0);">;<br />}</span></span></code>	
如何打印出一个字符串	<code><span style="color: rgb(0, 0, 0);"><span style="color: rgb(0, 119, 0);">echo&nbsp;</span><span style="color: rgb(221, 0, 0);">"In&nbsp;a&nbsp;function\n"</span><span style="color: rgb(0, 119, 0);">;</span></span></code>	
Linux回车和window回车有区别吗	有<br />linux是 <span style="text-decoration: underline;">\n</span><br />windows 是 <span style="text-decoration: underline;">\r\n</span><br />	
Perl是什么	Perl 是一种能完成任务的语言。从一开始，Perl 就设计成可以把简单工作简单化，同时又不失去处理困难问题能力的语言。它可以很容易操作数字，文本，文件和目录，计算机和网络，特别是程序的语言。	
Jsp是什么	<span style="background-color: rgb(255, 204, 51);">JSP是Java Server Pages</span>的缩写。简单地说，JSP就是包含用Java语言编写的网页。<br /><br /><span style="color: rgb(102, 0, 0);">注意请不要与JavaScript混淆，JavaScript与Java不相同。</span><br /><br />Java是一种完整的程序设计语言，功能要比JavaScript强大得多。可用于网页编程、手机编程等等。<br /><br />JavaScript是一种脚本语言，直接通过解释器就可以执行，而Java要先编译、后执行。JavaScript只用于网页编程。	
Linux下如何更新svn	svn up	
Linux下如何提交svn	svn commit -m你的注释	
Linux如何添加到svn	svn add 你的文件	
Linux下如何从svn里删除一个文件	svn remove 你的文件	
什么是http	<h4>什么是http？</h4>    <p><font size="2">超文件传输协议(HTTP，HyperText Transfer Protocol)是互联网上应用最为广泛的一种网络传输协议。所有的WWW文件都必须遵守这个标准。设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法。 </font>目前的应用主要除了HTML网页外还被用来传输超文本数据 例如：图片、音频文件(MP3等)、视频文件(rm、avi等)、压缩包(zip、rar等)&hellip;&hellip;基本上只要是文件数据均可以利用HTTP进行传输。</p>	
什么是ftp	<strong>什么是FTP</strong> <br /><br />　　FTP是File Transfer Protocol的缩写，即文件传输协议。它是Internet上使用非常广泛的一种通讯协议，是计算机网络上主机之间传送文件的一种服务协议。FTP支持多种文件类型和文件格式，如文本文件和二进制文件。	
什么是CGI	1. 定义：<br />CGI(Common Gateway Interface)是HTTP服务器与你的或其它机器<br />上的程序进行&ldquo;交谈&rdquo;的一种工具，其程序须运行在网络服务器上。 <p>2. 功能：<br />绝大多数的CGI程序被用来解释处理杰自表单的输入信息，并在服<br />务器产生相应的处理，或将相应的信息反馈给浏览器。CGI程序使<br />网页具有交互功能。</p>	
什么是XML	<p><font color="#000000"><strong>什么是XML</strong> &nbsp;&nbsp;&nbsp; </font></p><p><font color="#000000">&nbsp;&nbsp;&nbsp;&nbsp; XML 代表Extensible MarkupLanguage（eXtensible MarkupLanguage的缩写，意为可扩展的标记语言）。XML是一套定义语义标记的规则，这些标记将文档分成许多部件并对这些部件加以标识。它也是元标记语言，即定义了用于定义其他与特定领域有关的、语义的、结构化的标记语言的句法语言。</font></p>	
什么是RSS	<b>RSS</b><br />　　(也叫聚合内容，Really Simple Syndication)是一种描述和同步网站内容的格式，是目前使用最广泛的资源共享应用。可以被称为资源共享模式的延伸。	
什么是http头部 头部有哪些内容	<div>HTTP 头部解释</div><div>&nbsp;</div><div>============================================================================================================================<br />1. Accept：告诉WEB服务器自己接受什么介质类型，*/* 表示任何类型，type/* 表示该</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 类型下的所有子类型，type/sub-type。</div><div>&nbsp;</div><div>2. Accept-Charset：&nbsp;&nbsp; 浏览器申明自己接收的字符集<br />&nbsp;&nbsp; Accept-Encoding：&nbsp; 浏览器申明自己接收的编码方法，通常指定压缩方法，是否支持压</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 缩，支持什么压缩方法（gzip，deflate）<br />&nbsp;&nbsp; Accept-Language：：浏览器申明自己接收的语言</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;语言跟字符集的区别：中文是语言，中文有多种字符集，</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;比如big5，gb2312，gbk等等。</div><div>&nbsp;</div><div>3. Accept-Ranges：WEB服务器表明自己是否接受获取其某个实体的一部分（比如文件</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;的一部分）的请求。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bytes：表示接受，none：表示不接受。</div><div>&nbsp;</div><div>4. Age：当代理服务器用自己缓存的实体去响应请求时，用该头部表明该实体从产生</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 到现在经过多长时间了。</div><div>&nbsp;</div><div>5. Authorization：当客户端接收到来自WEB服务器的 WWW-Authenticate 响应时，</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用该头部来回应自己的身份验证信息给WEB服务器。</div><div>&nbsp;</div><div>6. Cache-Control：请求：no-cache（不要缓存的实体，要求现在从WEB服务器去取）<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;max-age：（只接受 Age 值小于 max-age 值，并且没有过期的对象）<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;max-stale：（可以接受过去的对象，但是过期时间必须小于 </div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; max-stale 值）<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; min-fresh：（接受其新鲜生命期大于其当前 Age 跟 min-fresh 值之和的</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;缓存对象）<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;响应：public(可以用 Cached 内容回应任何用户)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; private（只能用缓存内容回应先前请求该内容的那个用户）<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; no-cache（可以缓存，但是只有在跟WEB服务器验证了其有效后，</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 才能返回给客户端）<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; max-age：（本响应包含的对象的过期时间）<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ALL:&nbsp; no-store（不允许缓存）</div><div>&nbsp;</div><div>7. Connection：请求：close（告诉WEB服务器或者代理服务器，在完成本次请求的响应</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 后，断开连接，不要等待本次连接的后续请求了）。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; keepalive（告诉WEB服务器或者代理服务器，在完成本次请求的</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;响应后，保持连接，等待本次连接的后续请求）。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;响应：close（连接已经关闭）。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; keepalive（连接保持着，在等待本次连接的后续请求）。<br />&nbsp;&nbsp; Keep-Alive：如果浏览器请求保持连接，则该头部表明希望 WEB 服务器保持</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 连接多长时间（秒）。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例如：Keep-Alive：300</div><div>&nbsp;</div><div>8. Content-Encoding：WEB服务器表明自己使用了什么压缩方法（gzip，deflate）压缩</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 响应中的对象。 <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例如：Content-Encoding：gzip&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp; Content-Language：WEB 服务器告诉浏览器自己响应的对象的语言。</div><div>&nbsp;&nbsp; Content-Length：&nbsp; WEB 服务器告诉浏览器自己响应的对象的长度。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例如：Content-Length: 26012<br />&nbsp;&nbsp; Content-Range：&nbsp;&nbsp; WEB 服务器表明该响应包含的部分对象为整个对象的哪个部分。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例如：Content-Range: bytes 21010-47021/47022<br />&nbsp;&nbsp; Content-Type：&nbsp;&nbsp;&nbsp; WEB 服务器告诉浏览器自己响应的对象的类型。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例如：Content-Type：application/xml</div><div>&nbsp;</div><div>9. ETag：就是一个对象（比如URL）的标志值，就一个对象而言，比如一个 html 文件，</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果被修改了，其 Etag 也会别修改， 所以，ETag 的作用跟 Last-Modified 的</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 作用差不多，主要供 WEB 服务器 判断一个对象是否改变了。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 比如前一次请求某个 html 文件时，获得了其 ETag，当这次又请求这个文件时， </div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 浏览器就会把先前获得的 ETag 值发送给&nbsp; WEB 服务器，然后 WEB 服务器</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;会把这个 ETag 跟该文件的当前 ETag 进行对比，然后就知道这个文件</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 有没有改变了。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </div><div>10. Expired：WEB服务器表明该实体将在什么时候过期，对于过期了的对象，只有在</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 跟WEB服务器验证了其有效性后，才能用来响应客户请求。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; 是 HTTP/1.0 的头部。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;例如：Expires：Sat, 23 May 2009 10:02:12 GMT</div><div>&nbsp;</div><div>11. Host：客户端指定自己想访问的WEB服务器的域名/IP 地址和端口号。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例如：Host：rss.sina.com.cn</div><div>&nbsp;</div><div>12. If-Match：如果对象的 ETag 没有改变，其实也就意味著对象没有改变，</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 才执行请求的动作。<br />&nbsp;&nbsp;&nbsp; If-None-Match：如果对象的 ETag 改变了，其实也就意味著对象也改变了，</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 才执行请求的动作。</div><div>&nbsp;</div><div>13. If-Modified-Since：如果请求的对象在该头部指定的时间之后修改了，才执行请求</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 的动作（比如返回对象），否则返回代码304，告诉浏览器该对象</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 没有修改。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例如：If-Modified-Since：Thu, 10 Apr 2008 09:14:42 GMT<br />&nbsp;&nbsp;&nbsp; If-Unmodified-Since：如果请求的对象在该头部指定的时间之后没修改过，才执行</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 请求的动作（比如返回对象）。</div><div>&nbsp;</div><div>14. If-Range：浏览器告诉 WEB 服务器，如果我请求的对象没有改变，就把我缺少的部分</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 给我，如果对象改变了，就把整个对象给我。 浏览器通过发送请求对象的 </div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ETag 或者 自己所知道的最后修改时间给 WEB 服务器，让其判断对象是否</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;改变了。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 总是跟 Range 头部一起使用。</div><div>&nbsp;</div><div>15. Last-Modified：WEB 服务器认为对象的最后修改时间，比如文件的最后修改时间，</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 动态页面的最后产生时间等等。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;例如：Last-Modified：Tue, 06 May 2008 02:42:43 GMT</div><div>&nbsp;</div><div>16. Location：WEB 服务器告诉浏览器，试图访问的对象已经被移到别的位置了，</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;到该头部指定的位置去取。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;例如：Location：</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<a href="http://i0.sinaimg.cn/dy/deco/2008/0528/sinahome_0803_ws_005_text_0.gif%C2%A0" target="_blank">http://i0.sinaimg.cn/dy/deco/2008/0528/sinahome_0803_ws_005_text_0.gif&nbsp;</a></div><div>&nbsp;</div><div>17. Pramga：主要使用 Pramga: no-cache，相当于 Cache-Control： no-cache。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例如：Pragma：no-cache</div><div>&nbsp;</div><div>18. Proxy-Authenticate： 代理服务器响应浏览器，要求其提供代理身份验证信息。<br />&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;Proxy-Authorization：浏览器响应代理服务器的身份验证请求，提供自己的身份信息。</div><div>&nbsp;</div><div>19. Range：浏览器（比如 Flashget 多线程下载时）告诉 WEB 服务器自己想取对象的</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;哪部分。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;例如：Range: bytes=1173546-</div><div>&nbsp;</div><div>20. Referer：浏览器向 WEB 服务器表明自己是从哪个 网页/URL 获得/点击 当前请求中</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 的网址/URL。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;例如：Referer：<a href="http://www.sina.com/" target="_blank">http://www.sina.com/</a></div><div>&nbsp;</div><div>21. Server: WEB 服务器表明自己是什么软件及版本等信息。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例如：Server：Apache/2.0.61 (Unix)</div><div>&nbsp;</div><div>22. User-Agent: 浏览器表明自己的身份（是哪种浏览器）。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;例如：User-Agent：Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN;&nbsp;&nbsp; </div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rv:1.8.1.14) Gecko/20080404 Firefox/2.0.0.14</div><div>&nbsp;</div><div>23. Transfer-Encoding: WEB 服务器表明自己对本响应消息体（不是消息体里面的对象）</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;作了怎样的编码，比如是否分块（chunked）。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例如：Transfer-Encoding: chunked</div><div>&nbsp;</div><div>24. Vary: WEB服务器用该头部的内容告诉 Cache 服务器，在什么条件下才能用本响应</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;所返回的对象响应后续的请求。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;假如源WEB服务器在接到第一个请求消息时，其响应消息的头部为：</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Content-Encoding: gzip; Vary: Content-Encoding&nbsp; 那么 Cache 服务器会分析后续</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 请求消息的头部，检查其 Accept-Encoding，是否跟先前响应的 Vary 头部值</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 一致，即是否使用相同的内容编码方法，这样就可以防止 Cache 服务器用自己</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;Cache 里面压缩后的实体响应给不具备解压能力的浏览器。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例如：Vary：Accept-Encoding</div><div>&nbsp;</div><div>25. Via： 列出从客户端到 OCS 或者相反方向的响应经过了哪些代理服务器，他们用</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 什么协议（和版本）发送的请求。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 当客户端请求到达第一个代理服务器时，该服务器会在自己发出的请求里面</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 添加 Via 头部，并填上自己的相关信息，当下一个代理服务器 收到第一个代理</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器的请求时，会在自己发出的请求里面复制前一个代理服务器的请求的Via </div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 头部，并把自己的相关信息加到后面， 以此类推，当 OCS 收到最后一个代理服</div><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 务器的请求时，检查 Via 头部，就知道该请求所经过的路由。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例如：Via：1.0 236-81.D07071953.sina.com.cn:80 (squid/2.6.STABLE13)</div><div>============================================================================================================================<br />HTTP 请求消息头部实例：<br />Host：rss.sina.com.cn<br />User-Agent：Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.8.1.14) Gecko/20080404 Firefox/2.0.0.14<br />Accept：text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5<br />Accept-Language：zh-cn,zh;q=0.5<br />Accept-Encoding：gzip,deflate<br />Accept-Charset：gb2312,utf-8;q=0.7,*;q=0.7<br />Keep-Alive：300<br />Connection：keep-alive<br />Cookie：userId=C5bYpXrimdmsiQmsBPnE1Vn8ZQmdWSm3WRlEB3vRwTnRtW&nbsp;&nbsp; &lt;-- Cookie <br />If-Modified-Since：Sun, 01 Jun 2008 12:05:30 GMT<br />Cache-Control：max-age=0</div>HTTP 响应消息头部实例：<br />Status：OK - 200&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;-- 响应状态码，表示 web 服务器处理的结果。 <br />Date：Sun, 01 Jun 2008 12:35:47 GMT<br />Server：Apache/2.0.61 (Unix)<br />Last-Modified：Sun, 01 Jun 2008 12:35:30 GMT<br />Accept-Ranges：bytes<br />Content-Length：18616<br />Cache-Control：max-age=120<br />Expires：Sun, 01 Jun 2008 12:37:47 GMT<br />Content-Type：application/xml<br />Age：2<br />X-Cache：HIT from 236-41.D07071951.sina.com.cn&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;-- 反向代理服务器使用的 HTTP 头部<br />Via：1.0 236-41.D07071951.sina.com.cn:80 (squid/2.6.STABLE13)<br />Connection：close	
什么是cookie？cookie有什么作用？网站利用cookie存在什么问题？	<font class="f12" id="zoom">什么是Cookie（&ldquo;小甜饼&rdquo;）呢？简单来说，Cookie就是服务器暂存放在你的电脑里的资料（.txt格式的文本文件），好让服务器用来辨认你的计算机。当你在浏览网站的时候，Web服务器会先送一小小资料放在你的计算机上，Cookie会帮你在网站上所打的文字或是一些选择都记录下来。当下次你再访问同一个网站，Web服务器会先看看有没有它上次留下的Cookie资料，有的话，就会依据Cookie里的内容来判断使用者，送出特定的网页内容给你。</font>	
什么是POP3？ 	&nbsp; POP3(PostOffice Protocol3)即邮局协议的第3个版本,它规定怎样将个人计算机连接到Internet的邮件服务器和下载电子邮件的电子协议。它是因特网电子邮件的第一个离线协议标准,POP3允许用户从服务器上把邮件存储到本地主机（即自己的计算机）上,同时删除保存在邮件服务器上的邮件，而POP3服务器则是遵循POP3协议的接收邮件服务器，用来接收电子邮件的。         	
什么是SMTP？  	<br />&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;SMTP(Simple Mail TransferProtocol)即简单邮件传输协议,它是一组用于由源地址到目的地址传送邮件的规则,由它来控制信件的中转方式。SMTP协议属于TCP／IP协议族,它帮助每台计算机在发送或中转信件时找到下一个目的地。通过SMTP协议所指定的服务器,我们就可以把E－mail寄到收信人的服务器上了,整个过程只要几分钟。SMTP服务器则是遵循SMTP协议的发送邮件服务器，用来发送或中转你发出的电子邮件。&nbsp;&nbsp;	
列出你知道的邮件收发客户端软件	thunder bird<br />outlook<br />outlookexpress<br />Becky<br />	
如何生成随机密码	<p>function MakePass($length) </p><p>{ </p><p style="margin-left: 80px;">$possible = "0123456789!@#$%^&amp;*()_+". </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "abcdefghijklmnopqrstuvwxyz". </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "ABCDEFGHIJKLMNOPQRSTUVWXYZ"; </p><p style="margin-left: 80px;">$str = ""; </p><p style="margin-left: 80px;">while(strlen($str) &lt; $length) </p><p style="margin-left: 80px;">{ </p><p style="margin-left: 80px;">&nbsp; $str .= substr($possible, (rand() % strlen($possible)), 1); </p><p style="margin-left: 80px;">} </p><p style="margin-left: 80px;">return($str); </p><p>} </p>	
Zend 框架是什么	 Zend 框架究竟是什么呢？Zend 框架具有以下特征：<ul><li>是基于 PHP 建立的。</li><li>是面向对象的。</li><li>使用 MVC 范例。</li><li>具有开放源码贡献者。</li><li>有贡献者负责保证他们的代码不是他人的知识产权。</li></ul>	
网站开发一般步骤	<ol><li>计划做一个什么样的网站 主要有哪些功能做什么的</li><li>需要多少人 用什么技术</li><li>开发代码及单元测试</li><li>系统测试<br /></li><li>美工美化<br /></li><li>发布测试</li><li>发布</li><li>维护</li></ol>	
什么是单元测试	什么是单元测试<br />&nbsp;&nbsp;&nbsp;单元测试是开发者编写的一小段代码，用于检验被测代码的一个很小的、很明确的功能是否正确。通常而言，一个单元测试是用于判断某个特定条件（或者场景）下某个特定函数的行为。例如，你可能把一个很大的值放入一个有序list 中去，然后确认该值出现在list的尾部。或者，你可能会从字符串中删除匹配某种模式的字符，然后确认字符串确实不再包含这些字符了。<br />&nbsp;&nbsp;&nbsp; 单元测试是由程序员自己来完成，最终受益的也是程序员自己。可以这么说，程序员有责任编写功能代码，同时也就有责任为自己的代码编写单元测试。执行单元测试，就是为了证明这段代码的行为和我们期望的一致。	
什么是ODBC	ODBC(Open Database Connectivity，开放数据库互连)是微软公司开放服务结构(WOSA，Windows OpenServicesArchitecture)中有关数据库的一个组成部分，它建立了一组规范，并提供了一组对数据库访问的标准API（应用程序编程接口）。这些API利用SQL来完成其大部分任务。ODBC本身也提供了对SQL语言的支持，用户可以直接将SQL语句送给ODBC。	
什么是DBMS	数据库管理系统是为管理数据库而设计的电脑软件系统。具有代表性的数据管理系统有：MYSQL ,Oracle、Microsoft SQL Server&nbsp;	
什么是JSON	什么是JSON <br />JSON(Javascript Object Notation) 是一种轻量级的数据交换格式。易于人阅读和编写。同时也易于机器解析和生成。它基于Javascript Programming Language, Standard ECMA-262 3rd Edition - December 1999的一个子集。JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯（包括C, C++, C#, Java, Javascript, Perl, Python等）。这些特性使JSON成为理想的数据交换语言。<p>JSON概念很简单，就是服务器直接生成Javascript语句，客户端获取后直接用eval方法来获得这个对象，这样就可以省去解析XML的性损失</p><p style="margin-left: 40px;"><span style="background-color: rgb(255, 204, 51);">一下是XML</span><br /></p><ol class="dp-xml" start="1"><li class=""><span><span class="tag">&lt;</span><span class="tag-name">items</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">item</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">id</span><span class="tag">&gt;</span><span>1</span><span class="tag"><!--</span--><span class="tag-name">id</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">author</span><span class="tag">&gt;</span><span>Jackson</span><span class="tag"><!--</span--><span class="tag-name">author</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">url</span><span class="tag">&gt;</span><span>http://www.web.cn</span><span class="tag"><!--</span--><span class="tag-name">url</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">content</span><span class="tag">&gt;</span><span>Welcome&nbsp;to&nbsp;Web.cn</span><span class="tag"><!--</span--><span class="tag-name">content</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag"><!--</span--><span class="tag-name">item</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">item</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">id</span><span class="tag">&gt;</span><span>2</span><span class="tag"><!--</span--><span class="tag-name">id</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">author</span><span class="tag">&gt;</span><span>Relkn</span><span class="tag"><!--</span--><span class="tag-name">author</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">url</span><span class="tag">&gt;</span><span>http://www.web.cn</span><span class="tag"><!--</span--><span class="tag-name">url</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">content</span><span class="tag">&gt;</span><span>Web.cn关注互联网新技术</span><span class="tag"><!--</span--><span class="tag-name">content</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag"><!--</span--><span class="tag-name">item</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">item</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">id</span><span class="tag">&gt;</span><span>3</span><span class="tag"><!--</span--><span class="tag-name">id</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">author</span><span class="tag">&gt;</span><span>Kvogend</span><span class="tag"><!--</span--><span class="tag-name">author</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">url</span><span class="tag">&gt;</span><span>http://www.web.cn</span><span class="tag"><!--</span--><span class="tag-name">url</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">content</span><span class="tag">&gt;</span><span>Web.cn关注WEB2.0</span><span class="tag"><!--</span--><span class="tag-name">content</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag"><!--</span--><span class="tag-name">item</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></span></li><li class="alt"><span><span class="tag"><!--</span--><span class="tag-name">items</span><span class="tag">&gt;</span><span>&nbsp;&nbsp; <br /></span></span></span></li></ol><div style="margin-left: 40px;"><span style="background-color: rgb(255, 204, 51);">一下是JSON</span><br /></div><div style="margin-left: 40px;">{items:[<br />{<br /><div style="margin-left: 40px;">id:1,<br />author:"Jackson",<br />url:"http://www.web.cn",<br />content:"Welcome to Web.cn"<br /></div>},<br />{<br /><div style="margin-left: 40px;">id:2,<br />author:"Relkn",<br />url:"http://www.web.cn",<br />content:"Web.cn关注互联网新技术"<br /></div>},<br />{<br /><div style="margin-left: 40px;">id:3,<br />author:"Kvogend",<br />url:"http://www.Web.cn",<br />content:"Web.cn关注WEB2.0"<br /></div>}<br />]}; <br /></div><p><br /></p><p><br /></p>	
如何把javascript 嵌入html中去	第一种:<br />&lt;script   language=javascript&gt;   <br />  ....   <br />  ....   <br />  &lt;/script&gt;<br /><br />第二种:<br />&lt;script src="<a href="http://www.xxxxxx.cn/xxxxx/xxxx.js" target="_blank">http://www.xxxxxx.cn/xxxxx/xxxx.js</a>"&gt;&lt;/script&gt;	
Php.ini是什么	是php的配置文件	
